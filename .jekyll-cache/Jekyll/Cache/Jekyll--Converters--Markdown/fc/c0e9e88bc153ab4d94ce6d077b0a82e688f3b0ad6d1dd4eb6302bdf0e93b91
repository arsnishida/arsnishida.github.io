I"Ã<p>Here is a lightly retouched pipeline for scRNAseq with times for the processes. I talked with Zach about the Saunder‚Äôs pipeline and my notes and future suggestions are in the post.</p>

<p>This describes a second pass at the processing pipeline for sc-RNAseq. The main changes from the first pass are the name changes to the tags and breaking the final steps into multiple parts to use the intermediate output for filtering purposes. Talking with Zach from the Saunders lab, here are some differences or elaborations we can add. Their work seems structured around DropSeq pipelines and tools related to edgeR and making DGE objects. Tag usage seems to indicate a lot being originally adapted from this, https://github.com/broadinstitute/Drop-seq/blob/master/doc/Drop-seq_Alignment_Cookbook.pdf.</p>
<ul>
  <li>built around snakemake paired with SLURM jobs</li>
  <li>uses condaenvs instead of modules	since they are on exacloud</li>
  <li>uses XC, XM, XG tags vs. the current choice of BC, XU, and XT tags</li>
  <li>performs read adapter trimming</li>
  <li>uses cellbender for background removal</li>
  <li>uses something for cell calling (using some method to choose cell filtering thresholds rather than setting arbitrary thresholds)</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code># setup
cd /home/groups/oroaklab/nishida/test_scrna/test_scrna_mar29/
module load picard/2.26.2
module load STAR/2.7.9a
module load subread/2.0.3

# link file
ln -s /home/groups/oroaklab/demultiplex/220324_VH00711_12_AAAV7VKM5/220324_VH00711_12_AAAV7VKM5.scRNA.SL.220324_HB_Coassay_RNA.R1.fq.gz .
FASTQ_FILE="220324_VH00711_12_AAAV7VKM5.scRNA.SL.220324_HB_Coassay_RNA.R1.fq.gz"

# transform FASTQs to unaligned single-read BAMS
time picard FastqToSam F1=$FASTQ_FILE OUTPUT=$FASTQ_FILE.bam SM=$FASTQ_FILE
#real    9m41.929s

# move bc to XC tag and umi to XM tag
time samtools view -h $FASTQ_FILE.bam | awk '/^@/ {print;next} {N=split($1,n,":"); O=split(n[2],o,"="); print $0 "\tXC:Z:" n[1] "\tXM:Z:" o[2]}' | samtools view -bS - &gt; temp.bam
#real    7m11.938s

# STAR alignment of unaligned BAM to reference
time STAR --runThreadN 24 --genomeDir /home/groups/oroaklab/refs/STAR/hg38 --readFilesCommand samtools view -h --readFilesType SAM SE --readFilesIn temp.bam --outSAMtype BAM Unsorted --outFilterScoreMinOverLread 0 --outFilterMatchNminOverLread 0 --outFileNamePrefix aligned
#real    7m16.440s

# sort
time samtools sort alignedAligned.out.bam -o alignedAligned.out.sort.bam
#real    15m23.468s

# use subread's featurecounts to add in 'XT' tags
time featureCounts -a /home/groups/oroaklab/refs/STAR/Homo_sapiens.GRCh38.104.gtf -R BAM -g gene_id -Q 30 -s 0 -T 24 -o alignedAligned.out.sort.annot.bam alignedAligned.out.sort.bam
#real    0m28.182s
</code></pre></div></div>

<p>###</p>

<p>#!!!- so a cutoff of like 100 UMI/cell and also &lt;10% of reads unique (to avoid stuff on the far right side)!!!</p>
<h1 id="make-sparse">make sparse</h1>
<h1 id="open-sam-pull-out-columns-use-only-uniquely-mapping-annotated-reads-strip-labels-keep-only-unique-combinations-remove-umi-info-count-format-to-sparse">open SAM, pull out columns, use only uniquely mapping annotated reads, strip labels, keep only unique combinations, remove UMI info, count, format to sparse</h1>
<p>samtools view alignedAligned.out.sort.bam.featureCounts.bam | cut -f 12,17,18,21 | 
	awk ‚Äò$1 == ‚ÄúNH:i:1‚Äù &amp;&amp; $4 != ‚Äú‚Äù‚Äô | 
	sed -e ‚Äòs/..:Z://g‚Äô | sort | uniq | cut -f 2,4 | uniq -c | sed -e ‚Äòs/^[ ]*//g‚Äô | awk ‚Äò{print $3,$2,$1}‚Äô | tr ‚Äò ‚Äò ‚Äò\t‚Äô &gt; z.hg38.txt</p>

<table>
  <tbody>
    <tr>
      <td>cat z.hg38.txt</td>
      <td>cut -f 1</td>
      <td>sort -n</td>
      <td>uniq &gt; sparse.hg38.rows</td>
    </tr>
    <tr>
      <td>cat z.hg38.txt</td>
      <td>cut -f 2</td>
      <td>sort -n</td>
      <td>uniq &gt; sparse.hg38.cols</td>
    </tr>
    <tr>
      <td>perl make_sparse.pl sparse.hg38.rows sparse.hg38.cols z.hg38.txt</td>
      <td>sort -n -k 1,2 &gt; sparse.hg38.values</td>
      <td>¬†</td>
      <td>¬†</td>
    </tr>
  </tbody>
</table>

<h1 id="make-fake-rows-with-bed-positions-and-not-gene-names-to-trick-cistopics">make fake rows with BED positions and not gene names to trick cistopics</h1>
<h1 id="cistopics-on-sparse-matrix-and-plot">cistopics on sparse matrix and plot</h1>
<p>scitools matrix-cistopic3 -X 220324_HB_Coassay_RNA.sparseMatrix.values
scitools matrix-umap 220324_HB_Coassay_RNA.cistopic.50.matrix
scitools matrix-pg 220324_HB_Coassay_RNA.cistopic.50.matrix
scitools plot-dims -A 220324_HB_Coassay_RNA.cistopic.50.k50.pg.annot 220324_HB_Coassay_RNA.cistopic.50.UMAP.dims</p>

<p>And here is a shot of the data gone through dimensionality reduction with cistopics. There‚Äôs structure but a lot of messy, diverse clusters. I think the messiness makes sense given the extra sparseness of the matrix.
<br /><a href="https://www.dropbox.com/s/rby6ltxidup3oag/blog_scrna.220324_HB_Coassay_RNA.cistopic.50.UMAP.plot.png?dl=0">UMAP of scRNA-seq</a></p>
:ET